{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Chrome from '../src/assets/AppLogo/Chrome.png';\nimport Louve from '../src/assets/AppLogo/Louve.png';\nimport Audio from '../src/assets/AppLogo/Audio.png';\nexport default {\n  data() {\n    return {\n      // Liste d'éléments avec image et texte\n      items: [{\n        id: 1,\n        name: \"Chrome\",\n        image: Chrome\n      }, {\n        id: 2,\n        name: \"Firefox\",\n        image: Louve\n      }, {\n        id: 3,\n        name: \"Safari\",\n        image: Audio\n      }, {\n        id: 4,\n        name: \"Edge\",\n        image: \"path/to/edge/image.png\"\n      }, {\n        id: 5,\n        name: \"Opera\",\n        image: \"path/to/opera/image.png\"\n      }\n      // Ajoutez plus d'éléments ici\n      ],\n      currentPage: 1,\n      // Page de démarrage\n      itemsPerPage: 24 // 24 éléments par page\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.items.length / this.itemsPerPage);\n    },\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.items.slice(start, end);\n    },\n    paginationPages() {\n      const pages = [];\n      if (this.totalPages <= 5) {\n        // Si le total de pages est inférieur ou égal à 5, afficher tous les boutons\n        for (let i = 1; i <= this.totalPages; i++) pages.push(i);\n      } else if (this.currentPage <= 3) {\n        // Si on est au début, afficher les trois premiers, \"...\" et le dernier\n        pages.push(1, 2, 3, '...', this.totalPages);\n      } else if (this.currentPage >= this.totalPages - 2) {\n        // Si on est proche de la fin, afficher le premier, \"...\" et les trois derniers\n        pages.push(1, '...', this.totalPages - 2, this.totalPages - 1, this.totalPages);\n      } else {\n        // Sinon, afficher le premier, \"...\", la page courante ±1, \"...\" et le dernier\n        pages.push(1, '...', this.currentPage - 1, this.currentPage, this.currentPage + 1, '...', this.totalPages);\n      }\n\n      // Limiter à 5 boutons en utilisant \"...\"\n      if (pages.length > 5) {\n        if (this.currentPage <= 3) {\n          return pages.slice(0, 4).concat(['...', this.totalPages]);\n        } else if (this.currentPage >= this.totalPages - 2) {\n          return [1, '...'].concat(pages.slice(-4));\n        } else {\n          return [1, '...', this.currentPage - 1, this.currentPage, this.currentPage + 1, '...', this.totalPages];\n        }\n      }\n      return pages;\n    }\n  },\n  methods: {\n    changePage(page) {\n      if (page !== '...') {\n        this.currentPage = page;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage -= 1;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage += 1;\n      }\n    },\n    ellipsisClick() {\n      // Avance ou recule dans la pagination en fonction de la position de l'ellipse\n      if (this.currentPage < this.totalPages - 3) {\n        this.currentPage += 3;\n      } else {\n        this.currentPage -= 3;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Chrome","Louve","Audio","data","items","id","name","image","currentPage","itemsPerPage","computed","totalPages","Math","ceil","length","paginatedItems","start","end","slice","paginationPages","pages","i","push","concat","methods","changePage","page","prevPage","nextPage","ellipsisClick"],"sources":["C:\\Users\\REDI\\Desktop\\Doc-Pr\\school\\src\\BlogPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"w-full flex justify-center mt-3\">\r\n    <!-- Pagination -->\r\n    <div class=\"flex flex-col items-center bg-b-main w-full\">\r\n      <!-- Liste des éléments de la page courante -->\r\n      <div class=\"grid grid-cols-4 gap-4 w-full\">\r\n        <div v-for=\"item in paginatedItems\" :key=\"item.id\" class=\"text-white text-center py-2\">\r\n          <!-- Affichage des éléments sous forme d'images ou autres -->\r\n          <div class=\"flex items-center\">\r\n            <img v-if=\"item.image\" :src=\"item.image\" alt=\"image\" class=\"w-10 h-10 mb-2\" />\r\n            <p>{{ item.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Pagination -->\r\n      <nav aria-label=\"Page navigation\">\r\n        <ul class=\"flex space-x-2\">\r\n          <!-- Flèche pour aller à la page précédente -->\r\n          <li\r\n            :class=\"['page-item', { 'text-gray-500': currentPage === 1, 'text-white': currentPage > 1 }]\"\r\n            @click=\"prevPage\"\r\n            :style=\"{ cursor: currentPage > 1 ? 'pointer' : 'default' }\"\r\n          >\r\n            <a href=\"#\" class=\"page-link block px-3 py-2 rounded-md\">&laquo;</a>\r\n          </li>\r\n\r\n          <!-- Boutons de pagination avec limitation de 5 éléments -->\r\n          <li v-for=\"page in paginationPages\" :key=\"page\" class=\"page-item\">\r\n            <a\r\n              href=\"#\"\r\n              v-if=\"page !== '...' \"\r\n              :class=\"['page-link block px-3 py-2 rounded-md', { 'bg-blue-600 text-white': page === currentPage, 'text-gray-500': page !== currentPage }]\"\r\n              @click=\"changePage(page)\"\r\n            >{{ page }}</a>\r\n            <a\r\n              v-else\r\n              href=\"#\"\r\n              class=\"page-link block px-3 py-2 rounded-md text-gray-500\"\r\n              @click=\"ellipsisClick\"\r\n            >...</a>\r\n          </li>\r\n\r\n          <!-- Flèche pour aller à la page suivante -->\r\n          <li\r\n            :class=\"['page-item', { 'text-gray-500': currentPage === totalPages, 'text-white': currentPage < totalPages }]\"\r\n            @click=\"nextPage\"\r\n            :style=\"{ cursor: currentPage < totalPages ? 'pointer' : 'default' }\"\r\n          >\r\n            <a href=\"#\" class=\"page-link block px-3 py-2 rounded-md\">&raquo;</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chrome from '../src/assets/AppLogo/Chrome.png'\r\nimport Louve from '../src/assets/AppLogo/Louve.png'\r\nimport Audio from '../src/assets/AppLogo/Audio.png'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Liste d'éléments avec image et texte\r\n      items: [\r\n        { id: 1, name: \"Chrome\", image: Chrome },\r\n        { id: 2, name: \"Firefox\", image: Louve},\r\n        { id: 3, name: \"Safari\", image: Audio },\r\n        { id: 4, name: \"Edge\", image: \"path/to/edge/image.png\" },\r\n        { id: 5, name: \"Opera\", image: \"path/to/opera/image.png\" },\r\n        // Ajoutez plus d'éléments ici\r\n      ], \r\n      currentPage: 1, // Page de démarrage\r\n      itemsPerPage: 24, // 24 éléments par page\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.items.length / this.itemsPerPage);\r\n    },\r\n    paginatedItems() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.items.slice(start, end);\r\n    },\r\n    paginationPages() {\r\n      const pages = [];\r\n\r\n      if (this.totalPages <= 5) {\r\n        // Si le total de pages est inférieur ou égal à 5, afficher tous les boutons\r\n        for (let i = 1; i <= this.totalPages; i++) pages.push(i);\r\n      } else if (this.currentPage <= 3) {\r\n        // Si on est au début, afficher les trois premiers, \"...\" et le dernier\r\n        pages.push(1, 2, 3, '...', this.totalPages);\r\n      } else if (this.currentPage >= this.totalPages - 2) {\r\n        // Si on est proche de la fin, afficher le premier, \"...\" et les trois derniers\r\n        pages.push(1, '...', this.totalPages - 2, this.totalPages - 1, this.totalPages);\r\n      } else {\r\n        // Sinon, afficher le premier, \"...\", la page courante ±1, \"...\" et le dernier\r\n        pages.push(1, '...', this.currentPage - 1, this.currentPage, this.currentPage + 1, '...', this.totalPages);\r\n      }\r\n\r\n      // Limiter à 5 boutons en utilisant \"...\"\r\n      if (pages.length > 5) {\r\n        if (this.currentPage <= 3) {\r\n          return pages.slice(0, 4).concat(['...', this.totalPages]);\r\n        } else if (this.currentPage >= this.totalPages - 2) {\r\n          return [1, '...'].concat(pages.slice(-4));\r\n        } else {\r\n          return [1, '...', this.currentPage - 1, this.currentPage, this.currentPage + 1, '...', this.totalPages];\r\n        }\r\n      }\r\n\r\n      return pages;\r\n    },\r\n  },\r\n  methods: {\r\n    changePage(page) {\r\n      if (page !== '...') {\r\n        this.currentPage = page;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage -= 1;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage += 1;\r\n      }\r\n    },\r\n    ellipsisClick() {\r\n      // Avance ou recule dans la pagination en fonction de la position de l'ellipse\r\n      if (this.currentPage < this.totalPages - 3) {\r\n        this.currentPage += 3;\r\n      } else {\r\n        this.currentPage -= 3;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.page-item {\r\n  cursor: pointer;\r\n  padding: 0.5rem 1rem;\r\n}\r\n</style>\r\n"],"mappings":";AA0DA,OAAOA,MAAK,MAAO,kCAAiC;AACpD,OAAOC,KAAI,MAAO,iCAAgC;AAClD,OAAOC,KAAI,MAAO,iCAAgC;AAElD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAEP;MAAO,CAAC,EACxC;QAAEK,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAEN;MAAK,CAAC,EACvC;QAAEI,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAEL;MAAM,CAAC,EACvC;QAAEG,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAyB,CAAC,EACxD;QAAEF,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,KAAK,EAAE;MAA0B;MACzD;MAAA,CACD;MACDC,WAAW,EAAE,CAAC;MAAE;MAChBC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACT,KAAK,CAACU,MAAK,GAAI,IAAI,CAACL,YAAY,CAAC;IACzD,CAAC;IACDM,cAAcA,CAAA,EAAG;MACf,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACR,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMQ,GAAE,GAAID,KAAI,GAAI,IAAI,CAACP,YAAY;MACrC,OAAO,IAAI,CAACL,KAAK,CAACc,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACrC,CAAC;IACDE,eAAeA,CAAA,EAAG;MAChB,MAAMC,KAAI,GAAI,EAAE;MAEhB,IAAI,IAAI,CAACT,UAAS,IAAK,CAAC,EAAE;QACxB;QACA,KAAK,IAAIU,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAK,IAAI,CAACV,UAAU,EAAEU,CAAC,EAAE,EAAED,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;MAC1D,OAAO,IAAI,IAAI,CAACb,WAAU,IAAK,CAAC,EAAE;QAChC;QACAY,KAAK,CAACE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAACX,UAAU,CAAC;MAC7C,OAAO,IAAI,IAAI,CAACH,WAAU,IAAK,IAAI,CAACG,UAAS,GAAI,CAAC,EAAE;QAClD;QACAS,KAAK,CAACE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAACX,UAAS,GAAI,CAAC,EAAE,IAAI,CAACA,UAAS,GAAI,CAAC,EAAE,IAAI,CAACA,UAAU,CAAC;MACjF,OAAO;QACL;QACAS,KAAK,CAACE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAACd,WAAU,GAAI,CAAC,EAAE,IAAI,CAACA,WAAW,EAAE,IAAI,CAACA,WAAU,GAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAACG,UAAU,CAAC;MAC5G;;MAEA;MACA,IAAIS,KAAK,CAACN,MAAK,GAAI,CAAC,EAAE;QACpB,IAAI,IAAI,CAACN,WAAU,IAAK,CAAC,EAAE;UACzB,OAAOY,KAAK,CAACF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACK,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,CAACZ,UAAU,CAAC,CAAC;QAC3D,OAAO,IAAI,IAAI,CAACH,WAAU,IAAK,IAAI,CAACG,UAAS,GAAI,CAAC,EAAE;UAClD,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAACY,MAAM,CAACH,KAAK,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,OAAO;UACL,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAACV,WAAU,GAAI,CAAC,EAAE,IAAI,CAACA,WAAW,EAAE,IAAI,CAACA,WAAU,GAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAACG,UAAU,CAAC;QACzG;MACF;MAEA,OAAOS,KAAK;IACd;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,IAAIA,IAAG,KAAM,KAAK,EAAE;QAClB,IAAI,CAAClB,WAAU,GAAIkB,IAAI;MACzB;IACF,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACnB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAU,IAAK,CAAC;MACvB;IACF,CAAC;IACDoB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACpB,WAAU,GAAI,IAAI,CAACG,UAAU,EAAE;QACtC,IAAI,CAACH,WAAU,IAAK,CAAC;MACvB;IACF,CAAC;IACDqB,aAAaA,CAAA,EAAG;MACd;MACA,IAAI,IAAI,CAACrB,WAAU,GAAI,IAAI,CAACG,UAAS,GAAI,CAAC,EAAE;QAC1C,IAAI,CAACH,WAAU,IAAK,CAAC;MACvB,OAAO;QACL,IAAI,CAACA,WAAU,IAAK,CAAC;MACvB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}